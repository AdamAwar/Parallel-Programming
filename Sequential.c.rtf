{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <stdio.h>\
#include <stdlib.h>\
#include <time.h>\
\
#define M 50 // Number of rows in the first matrix\
#define N 50 // Number of columns in the first matrix and rows in the second matrix\
#define P 50 // Number of columns in the second matrix\
\
void multiplyMatrices(int A[M][N], int B[N][P], int C[M][P]) \{\
    for (int i = 0; i < M; i++) \{\
        for (int j = 0; j < P; j++) \{\
            C[i][j] = 0;\
            for (int k = 0; k < N; k++) \{\
                C[i][j] += A[i][k] * B[k][j];\
            \}\
        \}\
    \}\
\}\
\
int main() \{\
    int A[M][N], B[N][P], C[M][P];\
\
    // Initialize matrices A and B with some values\
    // For simplicity, using sequential numbers\
    for (int i = 0; i < M; i++) \{\
        for (int j = 0; j < N; j++) \{\
            A[i][j] = i + j;\
        \}\
    \}\
\
    for (int i = 0; i < N; i++) \{\
        for (int j = 0; j < P; j++) \{\
            B[i][j] = i * j;\
        \}\
    \}\
\
    clock_t starttime = clock();\
    \
    // Perform matrix multiplication\
    multiplyMatrices(A, B, C);\
\
    clock_t endtime = clock();\
\
    // Print the result matrix\
    printf("Result Matrix C:\\n");\
    for (int i = 0; i < M; i++) \{\
        for (int j = 0; j < P; j++) \{\
            printf("%d ", C[i][j]);\
        \}\
        printf("\\n");\
    \}\
\
    // Calculate and print the execution time in seconds\
    printf("Time: %f seconds\\n", (float)(endtime - starttime) / CLOCKS_PER_SEC);\
\
    return 0;\
\}\
//Time: 0.000813 seconds\
}